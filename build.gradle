buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }		
        maven { url "https://plugins.gradle.org/m2/" }	
    }
    dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath 'com.google.code.gson:gson:2.8.5'
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.wynprice.cursemaven"


import groovy.json.JsonSlurper
import groovy.json.JsonOutput

version = "1.9.6"
group = "com.robertx22.mmorpg"
archivesBaseName = "Mine and Slash-1.12.2"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2836"
    runDir = "run"
    mappings = "stable_39"
}

repositories {
    jcenter()	
	maven { 
		name = "jitpack"
		url "https://jitpack.io" 
	}
	 maven { url = "http://maven.tterrag.com" }
	 maven { url 'https://maven.blamejared.com' }
}

configurations {
    shade
    compile.extendsFrom shade
}

configurations {
    embed
	compile.extendsFrom(embed)
}

dependencies {

    deobfCompile "curse.maven:baubles:2518667" // Rings, REQUIRED
    deobfCompile "curse.maven:patchouli:2731963" // Book, REQUIRED
	shade 'net.objecthunter:exp4j:0.4.5' // Gui Stuff dependency, REQUIRED
	compile 'com.google.code.gson:gson:2.8.5' // Serialize More Difficult Configs, REQUIRED
	compile "info.loenwind.autosave:AutoSave:1.12.2-1.0.11" // Auto Nbt Saving, REQUIRED
    embed "info.loenwind.autosave:AutoSave:1.12.2-1.0.11"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    doLast {
    
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
        
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

jar {
   from configurations.embed.collect {
    it.isDirectory() ? it : zipTree(it).matching {
        exclude 'META-INF', 'META-INF/**'
    }
}
}
